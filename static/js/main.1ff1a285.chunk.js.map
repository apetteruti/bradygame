{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/Wrapper/index.js","components/Card/index.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","total","correct","Jumbotron","id","src","Wrapper","children","Card","value","onClick","clickedFunction","alt","name","image","App","state","cards","clickedid","shuffleCards","array","i","j","temp","length","Math","floor","random","shuffle","_this","console","log","includes","alert","setState","push","newCorrect","newTotal","_this2","this","components_Navbar","components_Jumbotron","components_Wrapper","map","components_Card","clicked","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1ff1a285.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n      {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"> */}\n      \n        <ul className=\"navbar-nav mr-auto\">\n\n          <li className=\"nav-item\">\n             <h2> Score:  {props.total}   ||   {\" \"}\n\n        \n              Clicked: {props.correct} </h2>\n            \n          </li>\n        </ul>\n      {/* </div> */}\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nfunction Jumbotron() {\n  return (\n  \n    <div className=\"jumbotron color\">\n      <div className = \"row\">\n      <div className = \"col md-4\">\n      <img id = \"img-control\" src =\"http://i.ebayimg.com/images/i/222326020027-0-1/s-l1000.jpg\"></img>\n      </div>\n      \n      <div className = \"col md-8\">\n      <br></br>\n      <h1 className = \"font\">Don't click the same Brady twice!</h1>\n       </div>\n    \n    </div>\n    </div>\n    \n  \n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n\r\n\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className = \"card\" \r\n    value = {props.id}\r\n    onClick = {() => {props.clickedFunction(props.id)}}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      {/* <div className=\"content\"> */}\r\n      {/* </div> */}\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\nimport cards from \"./cards.json\";\nimport \"./App.css\"\n\n\nclass App extends React.Component {\n  state = {\n    cards, //remember this creates an array, so you don't need to make an empty array\n    correct: 0,\n    total: 0,\n    clickedid: []\n  };\n\n  //Fisher-Yates shuffle: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array (Thanks to Rafael Trevino for his help)\n  shuffleCards = () => {\n    let cardArray = this.state.cards;\n    function shuffle (array){\n      var i = 0, j = 0, temp = null\n      for(i = array.length - 1; i > 0; i -= 1){\n        j = Math.floor(Math.random() * (i + 1))\n        temp = array[i]\n        array[i] = array[j]\n      array[j] = temp      \n    }\n    }\n    shuffle (cardArray)\n    // this.setState ({cards:cardArray})\n  } ;\n\n\n  //create a function to change \"clicked\" to true if it's clicked. \nclickedFunction = id => {\n\n  console.log(id);\n  // const cards = this.state.cards;\n  console.log(this.state.clickedid);\n\n  //go ahead with the game if less than 12 (the number of the cards)\n  if(this.state.correct !== 12){\n    //if the card has already been clicked, you find it in the array of ids\n    if(this.state.clickedid.includes(id)){\n    \n    alert (`You already clicked that Brady! Please start over.`)\n\n    //reset correct to 0\n    this.setState ({correct: 0})\n    //reset the clicked id array\n    this.setState ({clickedid: []})\n  \n    //then shuffle per the function above\n    this.shuffleCards();\n    }\n\n    //if the id isn't in the array, then go ahead with pushing the id, etc.\n    else {\n\n    //if the card hasn't been clicked, push the id into the array\n    this.state.clickedid.push(id);\n\n    //add one to correct\n    let newCorrect = (this.state.correct) +1;\n    console.log(newCorrect);\n\n    //add one to the correct score\n    this.setState ({correct: newCorrect})\n  \n    //shuffle game again\n    this.shuffleCards();\n    }\n  }\n\n  //if the correct score is greater than 11, then add one to the total score...\n  else {\n  //send alert\n  alert (`Groovy! You clicked all the Bradys! Let's try again.`)\n\n  //add one to the total score\n    let newTotal = (this.state.total) +1;\n    this.setState ({total: newTotal});\n\n  //set correct back to zero\n  this.setState({correct: 0});\n\n  //set the total to the new score\n\n  //reset the clicked id array\n  this.setState ({clickedid: []})\n\n  //shuffle the game game again\n  this.shuffleCards();\n   }\n}\n\n  render(){  \n    return (\n      <div>\n        <Navbar>\n         correct = {this.state.correct}\n         total = {this.state.total}\n        </Navbar>\n      <Jumbotron></Jumbotron>\n      <Wrapper>\n      {this.state.cards.map (cards => {\n        return (\n        <Card\n          clickedFunction={this.clickedFunction}\n          image={cards.image}\n          clicked={cards.clicked}\n          id={cards.id}\n          key={cards.id}\n        />\n        )\n      })}\n    </Wrapper>\n      </div>\n    )\n  }\n}\n\n\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}